#include<iostream>
#include<bits/stdc++.h>
using namespace std;
struct Node
{
    int data;
    Node *left , *right;
    Node(int d)
    {
        data=d;
        left=right=NULL;
    }
};

void preorder(Node *root)
{
    if (root==NULL)
      return ;
    cout<<root->data <<" ";
    preorder(root->left);
    preorder(root->right);
}

Node* mirror(Node *root)
{
    if(root==NULL)
    return NULL;
    
    mirror(root->left);
    mirror(root->right);
    
    // swap two mirrored subtrees
    
    Node *temp;
    temp=root->left;
    root->left=root->right;
    root->right=temp;
    
    return root;
}
int main()
{   Node *root = new Node(1);
    root->left=new Node(2);
    root->right=new Node(3);
    root->left->left=new Node(4);
    root->left->right=new Node(5);
     root->right->left=new Node(6);

   cout<<"\n binary tree is ::   \n";
   preorder(root);
   cout<<"\n Mirror image of Binary tree is ::\n";
   mirror(root);
   preorder(root);
    return 0;
}


